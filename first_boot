#! /bin/bash

##
## Commands to run at first boot on the mesh-potato Pi device
##


ME=`basename $0`
AVAHI_DOMAIN=local

echo "Running ${ME}..."

echo " *** waiting for network... ***"
sleep 5

# Install required wifi packages
pacman -v --noconfirm -U /root/.mesh-potato/required_packages/libnl*armv6h.pkg.tar.xz
pacman -v --noconfirm -U /root/.mesh-potato/required_packages/iw*armv6h.pkg.tar.xz

# enable mesh networking service
/root/.mesh-potato/enable_mesh
systemctl enable mesh-potato.service

# install avahi services
pacman -v --noconfirm -U /root/.mesh-potato/required_packages/avahi*armv6h.pkg.tar.xz /root/.mesh-potato/required_packages/libdaemon*armv6h.pkg.tar.xz /root/.mesh-potato/required_packages/nss-mdns*armv6h.pkg.tar.xz

# install c-ares package required by mosquitto
pacman -v --noconfirm -U /root/.mesh-potato/required_packages/c-ares*armv6h.pkg.tar.xz

pacman -v --noconfirm -U /root/.mesh-potato/required_packages/mosquitto-1.4.7-1-armv6h.pkg.tar.xz

# install fake hardware clock and set the clock
pacman -v --noconfirm -U /root/.mesh-potato/required_packages/fake-hwclock*any.pkg.tar.xz
touch -t $(cat /root/.mesh-potato/.install_time) ${ROOT}/usr/lib/systemd/scripts/fake-hwclock.sh

# enable the fake-hwclock
systemctl start fake-hwclock
systemctl enable fake-hwclock fake-hwclock-save.timer

cat << EOF > /etc/nsswitch.conf
# Begin /etc/nsswitch.conf

passwd: files
group: files
shadow: files

publickey: files

hosts: files mdns dns myhostname
networks: files

protocols: files
services: files
ethers: files
rpc: files

netgroup: files

# End /etc/nsswitch.conf
EOF

cat << EOF > /etc/avahi/avahi-daemon.conf
[server]
use-ipv4=yes
use-ipv6=no
disallow-other-stacks=yes
allow-interfaces=mesh0
domain-name=${AVAHI_DOMAIN}
EOF

systemctl restart dbus

systemctl enable avahi-daemon.service
systemctl restart avahi-daemon.service

cat << EOF > $0
#! /bin/bash
echo "First boot previously completed"
systemctl disable first_boot.service

EOF
