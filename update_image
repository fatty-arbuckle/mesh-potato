#! /bin/bash

ME=`basename $0`

### ##############################################
###
### Validation

if [ "$EUID" -ne 0 ]
then
    echo
    echo "*** Please run ${ME} as root"
    echo
    exit
fi

if [ "$#" -ne 3 ]; then
    echo "Unexpected number of parameters"
    echo "This script is intended to be run from the image_sdcard script and not by hand"
fi

ROOT=$1
PI_HOSTNAME=$2
HOST_PUBLIC_KEY=$3

if [ ! -d "$ROOT" ]
then
    echo "*** ${ROOT} must be a directory"
    exit
fi

if [ -z "$PI_HOSTNAME" ]
then
    echo "*** a blank hostname is not supported"
    exit
fi

if [ -z "$HOST_PUBLIC_KEY" ]
then
    echo "*** a public key is required"
    exit
fi

### ##############################################
###
### MAIN FUNCTION

main() {
    #echo "    ...update settings on ${ROOT}"
	set_hostname
	#set_pacman_mirrotlist
	create_mesh_network_scripts
	setup_host_ssh_public_key_access
	set_root_password
	copy_required_packages
	setup_first_boot
	update_issue
	enable_dhcpcd_ipv4ll
	deploy_mosquitto
	create_mosquitto_certificate
}

### ##############################################
###
### setup functions

function test {
    local the_cmd="$@"
    echo "    ---> ${the_cmd}"
    eval "${the_cmd}"
    local status=$?
    if [ $status -ne 0 ]; then
        echo "error with $1" >&2
    fi
    return $status
}

function set_hostname() {
    echo "    ...setting the hostname to ${PI_HOSTNAME}"
    echo ${PI_HOSTNAME} > ${ROOT}/etc/hostname
}

function set_pacman_mirrotlist() {
    eval "ipconfig mesh0"
    local status=$?
    if [ $status -eq 0 ]; then
        HOST_MESH0_IPV6=`ip addr show mesh0 | grep inet6 | awk '{print $2}' | awk -F/ '{print $1}'`
        echo "    ...setting the pacman mirrotlist to ${HOST_MESH0_IPV6}"
        cat << EOF > ${ROOT}/etc/pacman.d/mirrorlist
#
# Arch Linux ARM repository mirrorlist
# Generated on ${ME} mesh-potato script
#
   
### Local mesh-potato server
Server = http://[${HOST_MESH0_IPV6}%eth0]:8686/\$arch/\$repo
   
EOF
    fi
}

function create_mesh_network_scripts() {
    echo "    ...creating mesh network setup scripts"
    test mkdir -p ${ROOT}/root/.mesh-potato
    test cp enable_mesh ${ROOT}/root/.mesh-potato/
    test chmod 755 ${ROOT}/root/.mesh-potato/
    test cp mesh-potato.service ${ROOT}/etc/systemd/system/
}

function setup_host_ssh_public_key_access() {
    echo "    ...adding host's SSH public key"
    test mkdir ${ROOT}/root/.ssh
    test cp ${HOST_PUBLIC_KEY} ${ROOT}/root/.ssh/authorized_keys
}

function set_root_password() {
    echo "    ...setting the root password on the Pi"
    local hash=`./new_pw_hash | sed 's/[\\\/&]/\\&/g'`
    sed -i '/^root.*/ c\root:'"${hash}"':16619::::::' ${ROOT}/etc/shadow
}

function copy_required_packages() {
    echo "    ...copying the required packages to the Pi"
    test mkdir -p ${ROOT}/root/.mesh-potato/required_packages
    test cp required_packages/* ${ROOT}/root/.mesh-potato/required_packages
}

function setup_first_boot() {
    echo "    ...copying the first_boot script to the Pi"
    test cp first_boot ${ROOT}/root/.mesh-potato/first_boot
    test cp first_boot.service ${ROOT}/etc/systemd/system/multi-user.target.wants/first_boot.service
    test ln -s ${ROOT}/etc/systemd/system/multi-user.target.wants/first_boot.service ${ROOT}/etc/systemd/system/first_boot.service
    
}

function update_issue() {
	echo "Arch Linux \r (\l)" > ${ROOT}/etc/issue
	echo "mesh0 \6{mesh0}" >> ${ROOT}/etc/issue
}

function enable_dhcpcd_ipv4ll() {
    echo "    ...enabling ipv4ll for on the Pi"
    sed -i '/^noipv4ll.*/ c\#noipv4ll' ${ROOT}/etc/dhcpcd.conf
}

function deploy_mosquitto() {
    echo "    ...copying local mosquitto build to the Pi"
    test cp mosquitto/* ${ROOT}/
    test cp mesh-potato-mosquitto.conf ${ROOT}/usr/local/etc/mosquitto/mosquitto.conf

    echo "    ...copying local mosquitto build to the Pi"s
    test CREATE USER MOSQUITTOS
}

function create_mosquitto_certificate() {
    echo "    ...creating mosquitto certificates"    
    # need subject name from image_sdcard script
    # create key/request
    # create cert
    # copy to Pi
    CA CERT: /root/.mesh-potato/mosquitto/ssl/ca.crt
    certfile /root/.mesh-potato/mosquitto/ssl/local.crt
    keyfile /root/.mesh-potato/mosquitto/ssl/local.key

}

	
### ##############################################
###
### run it

main

